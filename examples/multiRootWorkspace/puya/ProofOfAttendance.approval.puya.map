{
  "version": 3,
  "sources": [
    "contract.py"
  ],
  "mappings": ";;;;;;;;;;;;AAKA;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AASK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AATL;;;AAAA;AASK;;;AAAA;AAAA;AAOA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAYA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAaA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAaA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAYA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAAA;AAAA;AAAA;;AAAA;AA5FL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4FK;;;AAAA;AAAA;AAqBA;;AAAA;AAAA;AAAA;;AAAA;AAjHL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiHK;;;AAAA;AAAA;AAwBA;;AAAA;AAAA;AAAA;;AAAA;AAzIL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyIK;;;AAAA;AAAA;AAwBA;;AAAA;AAAA;AAAA;;AAAA;AAjKL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiKK;;;AAAA;AAAA;AAjKL;AAAA;AASA;;;AAGY;;AAAqB;;AAArB;AADJ;AAGA;AAAA;;AAAA;;AAER;;;AAEe;AAAA;AAAA;AAAA;AAAuB;AAAA;AAAA;AAAA;AAAvB;AAAP;AAE8B;;AAAf;;;AACf;AAAA;AAAA;AAAA;AAAwB;AAAxB;AAAA;AAAA;AAAA;AAEqC;;AAAlB;AAAA;;AACZ;AAAP;AAEkB;;AAAyB;AAAA;AAA3C;;AA8JR;;;AAE6B;;;AAAsB;AAA3C;;;AAC+C;AAAA;AAAA;AAAA;AAAf;AAAnB;;;;;;;;;;;;;;;AAAb;AAAa;AAET;AAKQ;AAAA;;AAAA;AAAA;;;;;;;AADK;;;AADH;;;AADI;;;;;;;;;AAFd;;;;AAAA;;;AAAA;AAAA;;AADJ;AAhKR;;;AAEe;AAAA;AAAA;AAAA;AAAuB;AAAA;AAAA;AAAA;AAAvB;AAAP;AAE8B;;AAAf;;;AACf;AAAA;AAAA;AAAA;AAAwB;AAAxB;AAAA;AAAA;AAAA;AAEoC;;AACtB;AAAA;AAAA;;AACP;AAAP;AAEA;AAAA;AAAA;;AAER;;;AAEe;AAAA;AAAA;AAAA;AAAuB;AAAA;AAAA;AAAA;AAAvB;AAAP;AAE8B;;AAAf;;;AACf;AAAA;AAAA;AAAA;AAAwB;AAAxB;AAAA;AAAA;AAAA;AAE4B;;AACd;AAAA;AAAA;;AACP;AAAP;AAEY;AAAA;AAAZ;;AAER;;;AAEe;AAAA;AAAA;AAAA;AAAuB;AAAA;AAAA;AAAA;AAAvB;AAAP;AAE8B;;AAAf;;;AACf;AAAA;AAAA;AAAA;AAAwB;AAAxB;AAAA;AAAA;AAAA;AAEyC;AAA3B;;AAAA;AAAA;AAAA;;AACP;AAAP;AAEA;AAAa;;AAAb;AAAA;AAAA;AAAA;;AAER;;;AAE2C;;AAAlB;AACjB;AACO;AAAP;AAER;;;AAE4C;;AACnB;AAAA;AAAA;AACjB;AAAA;AACA;AAER;;;AAEoC;;AACX;AACjB;AACO;AAAP;AAER;;;AAEyB;AAAmB;;AAAnB;AAAA;AAAA;AAAA;AACjB;AAAA;AACA;AAER;;;;AAE2C;;AAAlB;AACjB;AACO;;AAAA;;AAA4B;AAAA;AAAA;AAAA;;AAA5B;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAEI;;AAAA;;AAAqB;;AAAA;;AAAA;AAAA;;AAArB;AAAA;;;AAAqB;;AAA6B;;AAA7B;AAArB;;;;;;;;AADJ;AAII;;AAAA;;AACG;;AAAA;;AAAA;AAAA;;AADH;AAAA;;;AACG;;AACA;;AADA;AADH;;;;;;;;AADJ;AAOI;;AADJ;;AAAA;;;;AA6FR;;;AAEQ;AAEW;;AAEM;;;;;;;;;;;;;AAJjB;;;AAAA;;;AAAA;;AA1FR;;;;AAI4C;;AACnB;AAAA;AAAA;AAAA;AAAA;;AACjB;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAEI;;AAAA;;AAAqB;;AAAA;;AAAA;AAAA;;AAArB;AAAA;;;AAAqB;;AAA6B;;AAA7B;AAArB;;;;;;;;AADJ;AAII;;AAAA;;AACG;;AAAA;;AAAA;AAAA;;AADH;AAAA;;;AACG;;AACA;;AADA;AADH;;;;;;;;AADJ;AAOI;;AADJ;;AAAA;;;;AAKR;;;;AAIoC;;AACX;AACjB;AACO;;AAAA;;AAA4B;AAAA;AAAA;AAAA;;AAA5B;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAEI;;AAAA;;AAAqB;;AAAA;;AAAA;AAAA;;AAArB;AAAA;;;AAAqB;;AAA6B;;AAA7B;AAArB;;;;;;;;AADJ;AAII;;AAAA;;AACG;;AAAA;;AAAA;AAAA;;AADH;AAAA;;;AACG;;AACA;;AADA;AADH;;;;;;;;AADJ;AAOI;;AADJ;;AAAA;;;;AAKR;;;;AAIyB;AAAmB;;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;;AACjB;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAEI;;AAAA;;AAAqB;;AAAA;;AAAA;AAAA;;AAArB;AAAA;;;AAAqB;;AAA6B;;AAA7B;AAArB;;;;;;;;AADJ;AAII;;AAAA;;AACG;;AAAA;;AAAA;AAAA;;AADH;AAAA;;;AACG;;AACA;;AADA;AADH;;;;;;;;AADJ;AAOI;;AADJ;;AAAA;;;;AAlLR;;;AACQ;AAAqB;;AAArB;AACA;;AAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAjB;AAGA;AAAuB;AAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn ApplicationID",
      "defined_out": [
        "app_id%0#0"
      ],
      "stack_out": [
        "app_id%0#0"
      ]
    },
    "2": {
      "op": "bnz main_entrypoint@2",
      "stack_out": []
    },
    "5": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.__init__",
      "op": "callsub __init__"
    },
    "8": {
      "block": "main_entrypoint@2",
      "stack_in": [],
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "11": {
      "op": "return",
      "stack_out": []
    },
    "12": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "15": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "17": {
      "op": "bz __puya_arc4_router___after_if_else@18",
      "stack_out": []
    },
    "20": {
      "op": "pushbytess 0x1bcde52d 0xb8962962 0xfe9b38ed 0x9f5df126 0xbb36b1d7 0x77a24669 0xd2709766 0x7f323833 0x03d246c7 0xe946d06b 0x90a65932 0x9b7186d3 0xeb2af226 // method \"init(uint64)void\", method \"confirm_attendance()void\", method \"confirm_attendance_with_box()void\", method \"confirm_attendance_with_box_ref()void\", method \"confirm_attendance_with_box_map()void\", method \"get_poa_id()uint64\", method \"get_poa_id_with_box()uint64\", method \"get_poa_id_with_box_ref()uint64\", method \"get_poa_id_with_box_map()uint64\", method \"claim_poa(axfer)void\", method \"claim_poa_with_box(axfer)void\", method \"claim_poa_with_box_ref(axfer)void\", method \"claim_poa_with_box_map(axfer)void\""
    },
    "87": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claim_poa(axfer)void)",
        "Method(claim_poa_with_box(axfer)void)",
        "Method(claim_poa_with_box_map(axfer)void)",
        "Method(claim_poa_with_box_ref(axfer)void)",
        "Method(confirm_attendance()void)",
        "Method(confirm_attendance_with_box()void)",
        "Method(confirm_attendance_with_box_map()void)",
        "Method(confirm_attendance_with_box_ref()void)",
        "Method(get_poa_id()uint64)",
        "Method(get_poa_id_with_box()uint64)",
        "Method(get_poa_id_with_box_map()uint64)",
        "Method(get_poa_id_with_box_ref()uint64)",
        "Method(init(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(init(uint64)void)",
        "Method(confirm_attendance()void)",
        "Method(confirm_attendance_with_box()void)",
        "Method(confirm_attendance_with_box_ref()void)",
        "Method(confirm_attendance_with_box_map()void)",
        "Method(get_poa_id()uint64)",
        "Method(get_poa_id_with_box()uint64)",
        "Method(get_poa_id_with_box_ref()uint64)",
        "Method(get_poa_id_with_box_map()uint64)",
        "Method(claim_poa(axfer)void)",
        "Method(claim_poa_with_box(axfer)void)",
        "Method(claim_poa_with_box_ref(axfer)void)",
        "Method(claim_poa_with_box_map(axfer)void)",
        "tmp%2#0"
      ]
    },
    "90": {
      "op": "match __puya_arc4_router___init_route@2 __puya_arc4_router___confirm_attendance_route@3 __puya_arc4_router___confirm_attendance_with_box_route@4 __puya_arc4_router___confirm_attendance_with_box_ref_route@5 __puya_arc4_router___confirm_attendance_with_box_map_route@6 __puya_arc4_router___get_poa_id_route@7 __puya_arc4_router___get_poa_id_with_box_route@8 __puya_arc4_router___get_poa_id_with_box_ref_route@9 __puya_arc4_router___get_poa_id_with_box_map_route@10 __puya_arc4_router___claim_poa_route@11 __puya_arc4_router___claim_poa_with_box_route@12 __puya_arc4_router___claim_poa_with_box_ref_route@13 __puya_arc4_router___claim_poa_with_box_map_route@14",
      "stack_out": []
    },
    "118": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "119": {
      "retsub": true,
      "op": "retsub"
    },
    "120": {
      "block": "__puya_arc4_router___init_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "122": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "123": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "126": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "127": {
      "op": "assert // is creating",
      "stack_out": []
    },
    "128": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "131": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "132": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.init",
      "op": "callsub init",
      "stack_out": []
    },
    "135": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "136": {
      "retsub": true,
      "op": "retsub"
    },
    "137": {
      "block": "__puya_arc4_router___confirm_attendance_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "139": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "140": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "141": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "143": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "144": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance",
      "op": "callsub confirm_attendance"
    },
    "147": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "148": {
      "retsub": true,
      "op": "retsub"
    },
    "149": {
      "block": "__puya_arc4_router___confirm_attendance_with_box_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "151": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "152": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "153": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "155": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "156": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance_with_box",
      "op": "callsub confirm_attendance_with_box"
    },
    "159": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "160": {
      "retsub": true,
      "op": "retsub"
    },
    "161": {
      "block": "__puya_arc4_router___confirm_attendance_with_box_ref_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "163": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "164": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "165": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "167": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "168": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance_with_box_ref",
      "op": "callsub confirm_attendance_with_box_ref"
    },
    "171": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "172": {
      "retsub": true,
      "op": "retsub"
    },
    "173": {
      "block": "__puya_arc4_router___confirm_attendance_with_box_map_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "175": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "176": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "177": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "179": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "180": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance_with_box_map",
      "op": "callsub confirm_attendance_with_box_map"
    },
    "183": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "184": {
      "retsub": true,
      "op": "retsub"
    },
    "185": {
      "block": "__puya_arc4_router___get_poa_id_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "187": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "188": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "191": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "192": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id",
      "op": "callsub get_poa_id",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "195": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "196": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "197": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "198": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "199": {
      "op": "log",
      "stack_out": []
    },
    "200": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "201": {
      "retsub": true,
      "op": "retsub"
    },
    "202": {
      "block": "__puya_arc4_router___get_poa_id_with_box_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "204": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "205": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "206": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "208": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "209": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id_with_box",
      "op": "callsub get_poa_id_with_box",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "212": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "213": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "214": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "215": {
      "op": "concat",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "216": {
      "op": "log",
      "stack_out": []
    },
    "217": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "218": {
      "retsub": true,
      "op": "retsub"
    },
    "219": {
      "block": "__puya_arc4_router___get_poa_id_with_box_ref_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "221": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "222": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "223": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "225": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "226": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id_with_box_ref",
      "op": "callsub get_poa_id_with_box_ref",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "229": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "230": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "231": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "232": {
      "op": "concat",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "233": {
      "op": "log",
      "stack_out": []
    },
    "234": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "235": {
      "retsub": true,
      "op": "retsub"
    },
    "236": {
      "block": "__puya_arc4_router___get_poa_id_with_box_map_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "238": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "239": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "240": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "242": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "243": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id_with_box_map",
      "op": "callsub get_poa_id_with_box_map",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "246": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0"
      ]
    },
    "247": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "248": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "249": {
      "op": "concat",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "250": {
      "op": "log",
      "stack_out": []
    },
    "251": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "252": {
      "retsub": true,
      "op": "retsub"
    },
    "253": {
      "block": "__puya_arc4_router___claim_poa_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "255": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "256": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "257": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "259": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "260": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "262": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "1"
      ]
    },
    "263": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "264": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "265": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "267": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "axfer"
      ]
    },
    "268": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "269": {
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "270": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa",
      "op": "callsub claim_poa",
      "stack_out": []
    },
    "273": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "274": {
      "retsub": true,
      "op": "retsub"
    },
    "275": {
      "block": "__puya_arc4_router___claim_poa_with_box_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "277": {
      "op": "!",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "278": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "279": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "281": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "282": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "284": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "1"
      ]
    },
    "285": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "286": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "287": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "289": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "axfer"
      ]
    },
    "290": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "291": {
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "292": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa_with_box",
      "op": "callsub claim_poa_with_box",
      "stack_out": []
    },
    "295": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "296": {
      "retsub": true,
      "op": "retsub"
    },
    "297": {
      "block": "__puya_arc4_router___claim_poa_with_box_ref_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "299": {
      "op": "!",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "300": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "301": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "303": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "304": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0",
        "1"
      ]
    },
    "307": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "308": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "309": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "311": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "312": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "313": {
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "314": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa_with_box_ref",
      "op": "callsub claim_poa_with_box_ref",
      "stack_out": []
    },
    "317": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "318": {
      "retsub": true,
      "op": "retsub"
    },
    "319": {
      "block": "__puya_arc4_router___claim_poa_with_box_map_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "321": {
      "op": "!",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "322": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "323": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "325": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "326": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "328": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "1"
      ]
    },
    "329": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "330": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "331": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "333": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "334": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "335": {
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "336": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa_with_box_map",
      "op": "callsub claim_poa_with_box_map",
      "stack_out": []
    },
    "339": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "340": {
      "retsub": true,
      "op": "retsub"
    },
    "341": {
      "block": "__puya_arc4_router___after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "342": {
      "retsub": true,
      "op": "retsub"
    },
    "343": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.init",
      "params": {
        "max_attendees#0": "uint64"
      },
      "block": "init",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "346": {
      "op": "txn Sender"
    },
    "348": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "350": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "351": {
      "op": "assert // Only creator can initialize",
      "stack_out": []
    },
    "352": {
      "op": "bytec_1 // \"max_attendees\"",
      "defined_out": [
        "\"max_attendees\""
      ],
      "stack_out": [
        "\"max_attendees\""
      ]
    },
    "353": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"max_attendees\"",
        "max_attendees#0 (copy)"
      ],
      "stack_out": [
        "\"max_attendees\"",
        "max_attendees#0 (copy)"
      ]
    },
    "355": {
      "op": "app_global_put",
      "stack_out": []
    },
    "356": {
      "retsub": true,
      "op": "retsub"
    },
    "357": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance",
      "params": {},
      "block": "confirm_attendance",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "360": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "361": {
      "op": "bytec_0 // \"total_attendees\"",
      "defined_out": [
        "\"total_attendees\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_attendees\""
      ]
    },
    "362": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "363": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "364": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "365": {
      "op": "bytec_1 // \"max_attendees\"",
      "defined_out": [
        "\"max_attendees\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"max_attendees\""
      ]
    },
    "366": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "367": {
      "op": "assert // check self.max_attendees exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "368": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "369": {
      "op": "assert // Max attendees reached",
      "stack_out": []
    },
    "370": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "372": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._mint_poa",
      "op": "callsub _mint_poa",
      "defined_out": [
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "375": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minted_asset#0",
        "0"
      ]
    },
    "376": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "0",
        "\"total_attendees\""
      ]
    },
    "377": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "378": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0"
      ]
    },
    "379": {
      "op": "intc_3 // TMPL_INCREMENT",
      "defined_out": [
        "TMPL_INCREMENT",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "TMPL_INCREMENT"
      ]
    },
    "380": {
      "op": "+",
      "defined_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ]
    },
    "381": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0",
        "\"total_attendees\""
      ]
    },
    "382": {
      "op": "swap",
      "stack_out": [
        "minted_asset#0",
        "\"total_attendees\"",
        "new_state_value%0#0"
      ]
    },
    "383": {
      "op": "app_global_put",
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "384": {
      "op": "txn Sender",
      "defined_out": [
        "minted_asset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "tmp%2#0"
      ]
    },
    "386": {
      "op": "box_get",
      "defined_out": [
        "_id#0",
        "has_claimed#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "_id#0",
        "has_claimed#0"
      ]
    },
    "387": {
      "op": "bury 1",
      "stack_out": [
        "minted_asset#0",
        "has_claimed#0"
      ]
    },
    "389": {
      "op": "!",
      "defined_out": [
        "minted_asset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "tmp%3#0"
      ]
    },
    "390": {
      "op": "assert // Already claimed POA",
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "391": {
      "op": "txn Sender",
      "defined_out": [
        "minted_asset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "tmp%4#0"
      ]
    },
    "393": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "minted_asset#0"
      ]
    },
    "394": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "395": {
      "op": "box_put",
      "stack_out": []
    },
    "396": {
      "retsub": true,
      "op": "retsub"
    },
    "397": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance._mint_poa",
      "params": {
        "claimer#0": "bytes"
      },
      "block": "_mint_poa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "400": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000"
      ],
      "stack_out": [
        "10000"
      ]
    },
    "403": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "10000"
      ],
      "stack_out": [
        "10000",
        "1"
      ]
    },
    "404": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": []
    },
    "407": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "408": {
      "op": "bytec_0 // \"total_attendees\"",
      "defined_out": [
        "\"total_attendees\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_attendees\""
      ]
    },
    "409": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "410": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "411": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "412": {
      "op": "pushbytes 0x416c676f4b697420504f412023",
      "defined_out": [
        "0x416c676f4b697420504f412023",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x416c676f4b697420504f412023"
      ]
    },
    "427": {
      "op": "swap",
      "stack_out": [
        "0x416c676f4b697420504f412023",
        "tmp%0#0"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "asset_name#0"
      ],
      "stack_out": [
        "asset_name#0"
      ]
    },
    "429": {
      "op": "itxn_begin"
    },
    "430": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset_name#0",
        "0"
      ]
    },
    "431": {
      "op": "bytec 4 // \"asset_url\"",
      "defined_out": [
        "\"asset_url\"",
        "0",
        "asset_name#0"
      ],
      "stack_out": [
        "asset_name#0",
        "0",
        "\"asset_url\""
      ]
    },
    "433": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset_name#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "asset_name#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "434": {
      "op": "assert // check self.asset_url exists",
      "stack_out": [
        "asset_name#0",
        "maybe_value%1#0"
      ]
    },
    "435": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_name#0",
        "claimer#0 (copy)",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "asset_name#0",
        "maybe_value%1#0",
        "claimer#0 (copy)"
      ]
    },
    "437": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "asset_name#0",
        "maybe_value%1#0"
      ]
    },
    "439": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": [
        "asset_name#0"
      ]
    },
    "441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset_name#0",
        "0"
      ]
    },
    "442": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "asset_name#0"
      ]
    },
    "444": {
      "op": "intc_1 // 1",
      "stack_out": [
        "asset_name#0",
        "1"
      ]
    },
    "445": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "asset_name#0"
      ]
    },
    "447": {
      "op": "pushbytes \"POA\"",
      "defined_out": [
        "\"POA\"",
        "asset_name#0"
      ],
      "stack_out": [
        "asset_name#0",
        "\"POA\""
      ]
    },
    "452": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "asset_name#0"
      ]
    },
    "454": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "456": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "458": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "460": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "461": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "463": {
      "op": "itxn_submit"
    },
    "464": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "466": {
      "retsub": true,
      "op": "retsub"
    },
    "467": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance_with_box",
      "params": {},
      "block": "confirm_attendance_with_box",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "470": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "471": {
      "op": "bytec_0 // \"total_attendees\"",
      "defined_out": [
        "\"total_attendees\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_attendees\""
      ]
    },
    "472": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "473": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "475": {
      "op": "bytec_1 // \"max_attendees\"",
      "defined_out": [
        "\"max_attendees\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"max_attendees\""
      ]
    },
    "476": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "477": {
      "op": "assert // check self.max_attendees exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "478": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "479": {
      "op": "assert // Max attendees reached",
      "stack_out": []
    },
    "480": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "482": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._mint_poa",
      "op": "callsub _mint_poa",
      "defined_out": [
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minted_asset#0",
        "0"
      ]
    },
    "486": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "0",
        "\"total_attendees\""
      ]
    },
    "487": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "488": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0"
      ]
    },
    "489": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "490": {
      "op": "+",
      "defined_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ]
    },
    "491": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0",
        "\"total_attendees\""
      ]
    },
    "492": {
      "op": "swap",
      "stack_out": [
        "minted_asset#0",
        "\"total_attendees\"",
        "new_state_value%0#0"
      ]
    },
    "493": {
      "op": "app_global_put",
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "494": {
      "op": "txn Sender"
    },
    "496": {
      "op": "dup",
      "defined_out": [
        "box#0",
        "box#0 (copy)",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "box#0",
        "box#0 (copy)"
      ]
    },
    "497": {
      "op": "box_len",
      "defined_out": [
        "box#0",
        "has_claimed#0",
        "maybe_value%3#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "box#0",
        "maybe_value%3#0",
        "has_claimed#0"
      ]
    },
    "498": {
      "op": "bury 1",
      "stack_out": [
        "minted_asset#0",
        "box#0",
        "has_claimed#0"
      ]
    },
    "500": {
      "op": "!",
      "defined_out": [
        "box#0",
        "minted_asset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "box#0",
        "tmp%2#0"
      ]
    },
    "501": {
      "op": "assert // Already claimed POA",
      "stack_out": [
        "minted_asset#0",
        "box#0"
      ]
    },
    "502": {
      "op": "swap",
      "stack_out": [
        "box#0",
        "minted_asset#0"
      ]
    },
    "503": {
      "op": "itob",
      "defined_out": [
        "box#0",
        "new_box_value%0#0"
      ],
      "stack_out": [
        "box#0",
        "new_box_value%0#0"
      ]
    },
    "504": {
      "op": "box_put",
      "stack_out": []
    },
    "505": {
      "retsub": true,
      "op": "retsub"
    },
    "506": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance_with_box_ref",
      "params": {},
      "block": "confirm_attendance_with_box_ref",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "509": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "510": {
      "op": "bytec_0 // \"total_attendees\"",
      "defined_out": [
        "\"total_attendees\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_attendees\""
      ]
    },
    "511": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "512": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "513": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "514": {
      "op": "bytec_1 // \"max_attendees\"",
      "defined_out": [
        "\"max_attendees\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"max_attendees\""
      ]
    },
    "515": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "516": {
      "op": "assert // check self.max_attendees exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "517": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "518": {
      "op": "assert // Max attendees reached",
      "stack_out": []
    },
    "519": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "521": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._mint_poa",
      "op": "callsub _mint_poa",
      "defined_out": [
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "524": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minted_asset#0",
        "0"
      ]
    },
    "525": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "0",
        "\"total_attendees\""
      ]
    },
    "526": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "527": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0"
      ]
    },
    "528": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "529": {
      "op": "+",
      "defined_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ]
    },
    "530": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0",
        "\"total_attendees\""
      ]
    },
    "531": {
      "op": "swap",
      "stack_out": [
        "minted_asset#0",
        "\"total_attendees\"",
        "new_state_value%0#0"
      ]
    },
    "532": {
      "op": "app_global_put",
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "533": {
      "op": "txn Sender"
    },
    "535": {
      "op": "dup",
      "defined_out": [
        "box_ref#0",
        "box_ref#0 (copy)",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "box_ref#0",
        "box_ref#0 (copy)"
      ]
    },
    "536": {
      "op": "box_len",
      "defined_out": [
        "box_ref#0",
        "has_claimed#0",
        "maybe_value%3#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "box_ref#0",
        "maybe_value%3#0",
        "has_claimed#0"
      ]
    },
    "537": {
      "op": "bury 1",
      "stack_out": [
        "minted_asset#0",
        "box_ref#0",
        "has_claimed#0"
      ]
    },
    "539": {
      "op": "!",
      "defined_out": [
        "box_ref#0",
        "minted_asset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "box_ref#0",
        "tmp%2#0"
      ]
    },
    "540": {
      "op": "assert // Already claimed POA",
      "stack_out": [
        "minted_asset#0",
        "box_ref#0"
      ]
    },
    "541": {
      "op": "swap",
      "stack_out": [
        "box_ref#0",
        "minted_asset#0"
      ]
    },
    "542": {
      "op": "itob",
      "defined_out": [
        "box_ref#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_ref#0",
        "tmp%3#0"
      ]
    },
    "543": {
      "op": "box_put",
      "stack_out": []
    },
    "544": {
      "retsub": true,
      "op": "retsub"
    },
    "545": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.confirm_attendance_with_box_map",
      "params": {},
      "block": "confirm_attendance_with_box_map",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "548": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "549": {
      "op": "bytec_0 // \"total_attendees\"",
      "defined_out": [
        "\"total_attendees\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_attendees\""
      ]
    },
    "550": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "551": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "552": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "553": {
      "op": "bytec_1 // \"max_attendees\"",
      "defined_out": [
        "\"max_attendees\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"max_attendees\""
      ]
    },
    "554": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "555": {
      "op": "assert // check self.max_attendees exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "556": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "557": {
      "op": "assert // Max attendees reached",
      "stack_out": []
    },
    "558": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "560": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._mint_poa",
      "op": "callsub _mint_poa",
      "defined_out": [
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "563": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minted_asset#0",
        "0"
      ]
    },
    "564": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "0",
        "\"total_attendees\""
      ]
    },
    "565": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "566": {
      "op": "assert // check self.total_attendees exists",
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0"
      ]
    },
    "567": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "568": {
      "op": "+",
      "defined_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0"
      ]
    },
    "569": {
      "op": "bytec_0 // \"total_attendees\"",
      "stack_out": [
        "minted_asset#0",
        "new_state_value%0#0",
        "\"total_attendees\""
      ]
    },
    "570": {
      "op": "swap",
      "stack_out": [
        "minted_asset#0",
        "\"total_attendees\"",
        "new_state_value%0#0"
      ]
    },
    "571": {
      "op": "app_global_put",
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "572": {
      "op": "bytec_3 // \"box_map\""
    },
    "573": {
      "op": "txn Sender",
      "defined_out": [
        "\"box_map\"",
        "minted_asset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "\"box_map\"",
        "tmp%2#0"
      ]
    },
    "575": {
      "op": "concat",
      "defined_out": [
        "minted_asset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "tmp%3#0"
      ]
    },
    "576": {
      "op": "box_len",
      "defined_out": [
        "has_claimed#0",
        "maybe_value%3#0",
        "minted_asset#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "maybe_value%3#0",
        "has_claimed#0"
      ]
    },
    "577": {
      "op": "bury 1",
      "stack_out": [
        "minted_asset#0",
        "has_claimed#0"
      ]
    },
    "579": {
      "op": "!",
      "defined_out": [
        "minted_asset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "tmp%4#0"
      ]
    },
    "580": {
      "op": "assert // Already claimed POA",
      "stack_out": [
        "minted_asset#0"
      ]
    },
    "581": {
      "op": "bytec_3 // \"box_map\""
    },
    "582": {
      "op": "txn Sender",
      "defined_out": [
        "\"box_map\"",
        "minted_asset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "\"box_map\"",
        "tmp%5#0"
      ]
    },
    "584": {
      "op": "concat",
      "defined_out": [
        "minted_asset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "minted_asset#0",
        "tmp%6#0"
      ]
    },
    "585": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "minted_asset#0"
      ]
    },
    "586": {
      "op": "itob",
      "defined_out": [
        "new_box_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "new_box_value%0#0"
      ]
    },
    "587": {
      "op": "box_put",
      "stack_out": []
    },
    "588": {
      "retsub": true,
      "op": "retsub"
    },
    "589": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id",
      "params": {},
      "block": "get_poa_id",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "592": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "594": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "poa_id#0",
        "exists#0"
      ]
    },
    "595": {
      "op": "assert // POA not found",
      "stack_out": [
        "poa_id#0"
      ]
    },
    "596": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "597": {
      "retsub": true,
      "op": "retsub"
    },
    "598": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id_with_box",
      "params": {},
      "block": "get_poa_id_with_box",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "601": {
      "op": "txn Sender",
      "defined_out": [
        "box#0"
      ],
      "stack_out": [
        "box#0"
      ]
    },
    "603": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "604": {
      "op": "swap",
      "stack_out": [
        "exists#0",
        "maybe_value%0#0"
      ]
    },
    "605": {
      "op": "btoi",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "exists#0",
        "poa_id#0"
      ]
    },
    "606": {
      "op": "swap",
      "stack_out": [
        "poa_id#0",
        "exists#0"
      ]
    },
    "607": {
      "op": "assert // POA not found",
      "stack_out": [
        "poa_id#0"
      ]
    },
    "608": {
      "retsub": true,
      "op": "retsub"
    },
    "609": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id_with_box_ref",
      "params": {},
      "block": "get_poa_id_with_box_ref",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "612": {
      "op": "txn Sender",
      "defined_out": [
        "box_ref#0"
      ],
      "stack_out": [
        "box_ref#0"
      ]
    },
    "614": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "poa_id#0",
        "exists#0"
      ]
    },
    "615": {
      "op": "assert // POA not found",
      "stack_out": [
        "poa_id#0"
      ]
    },
    "616": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "617": {
      "retsub": true,
      "op": "retsub"
    },
    "618": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.get_poa_id_with_box_map",
      "params": {},
      "block": "get_poa_id_with_box_map",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "621": {
      "op": "bytec_3 // \"box_map\""
    },
    "622": {
      "op": "txn Sender",
      "defined_out": [
        "\"box_map\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"box_map\"",
        "tmp%0#0"
      ]
    },
    "624": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "625": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "626": {
      "op": "swap",
      "stack_out": [
        "exists#0",
        "maybe_value%0#0"
      ]
    },
    "627": {
      "op": "btoi",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "exists#0",
        "poa_id#0"
      ]
    },
    "628": {
      "op": "swap",
      "stack_out": [
        "poa_id#0",
        "exists#0"
      ]
    },
    "629": {
      "op": "assert // POA not found",
      "stack_out": [
        "poa_id#0"
      ]
    },
    "630": {
      "retsub": true,
      "op": "retsub"
    },
    "631": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa",
      "params": {
        "opt_in_txn#0": "uint64"
      },
      "block": "claim_poa",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "634": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "635": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0"
      ]
    },
    "637": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "exists#0"
      ]
    },
    "638": {
      "op": "assert // POA not found, attendance validation failed!",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "639": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "641": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "poa_id#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%1#0"
      ]
    },
    "643": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "poa_id#0"
      ]
    },
    "644": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "645": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "646": {
      "op": "cover 2",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "648": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "649": {
      "op": "assert // POA ID mismatch",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0"
      ]
    },
    "650": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "652": {
      "op": "gtxns Fee",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "654": {
      "op": "!",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "655": {
      "op": "assert // We got you covered for free!",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0"
      ]
    },
    "656": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "658": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "660": {
      "op": "!",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "661": {
      "op": "assert",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0"
      ]
    },
    "662": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "664": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%8#0"
      ]
    },
    "666": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%8#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "668": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%8#0",
        "awst_tmp%0#0"
      ]
    },
    "670": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "tmp%8#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "671": {
      "op": "cover 2",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "awst_tmp%0#0"
      ]
    },
    "673": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "674": {
      "op": "bz claim_poa_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "677": {
      "op": "frame_dig 2"
    },
    "679": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "681": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "682": {
      "op": "bz claim_poa_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "685": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "686": {
      "op": "b claim_poa_bool_merge@4"
    },
    "689": {
      "block": "claim_poa_bool_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "690": {
      "block": "claim_poa_bool_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ],
      "op": "assert // Opt-in transaction sender and receiver must be the same",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "691": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "693": {
      "op": "gtxns AssetCloseTo",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%12#0"
      ]
    },
    "695": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "697": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%1#0"
      ]
    },
    "699": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "700": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%1#0"
      ]
    },
    "702": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "703": {
      "op": "bz claim_poa_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "706": {
      "op": "frame_dig 0"
    },
    "708": {
      "op": "global ZeroAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "710": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%15#0"
      ]
    },
    "711": {
      "op": "bz claim_poa_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "714": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%1#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "715": {
      "op": "b claim_poa_bool_merge@8"
    },
    "718": {
      "block": "claim_poa_bool_false@7",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "719": {
      "block": "claim_poa_bool_merge@8",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ],
      "op": "assert // Opt-in transaction close to must be zero address",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "720": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%16#0"
      ]
    },
    "722": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0",
        "tmp%16#0",
        "tmp%2#0"
      ]
    },
    "724": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._send_poa",
      "op": "callsub _send_poa",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "727": {
      "retsub": true,
      "op": "retsub"
    },
    "728": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance._send_poa",
      "params": {
        "receiver#0": "bytes",
        "asset_id#0": "uint64"
      },
      "block": "_send_poa",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "731": {
      "op": "itxn_begin"
    },
    "732": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "734": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "1"
      ]
    },
    "735": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "737": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "739": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "741": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "743": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "745": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "747": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "748": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "750": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "751": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "753": {
      "op": "itxn_submit"
    },
    "754": {
      "retsub": true,
      "op": "retsub"
    },
    "755": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa_with_box",
      "params": {
        "opt_in_txn#0": "uint64"
      },
      "block": "claim_poa_with_box",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "758": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "759": {
      "op": "txn Sender",
      "defined_out": [
        "box#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "box#0"
      ]
    },
    "761": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "762": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "exists#0",
        "maybe_value%0#0"
      ]
    },
    "763": {
      "op": "btoi",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "exists#0",
        "poa_id#0"
      ]
    },
    "764": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "exists#0",
        "poa_id#0",
        "poa_id#0 (copy)"
      ]
    },
    "765": {
      "op": "uncover 2",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0",
        "exists#0"
      ]
    },
    "767": {
      "op": "assert // POA not found, attendance validation failed!",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0"
      ]
    },
    "768": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "770": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "poa_id#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0",
        "tmp%0#0"
      ]
    },
    "772": {
      "op": "==",
      "defined_out": [
        "poa_id#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%1#0"
      ]
    },
    "773": {
      "op": "assert // POA ID mismatch",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "774": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "776": {
      "op": "gtxns Fee",
      "defined_out": [
        "poa_id#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%2#0"
      ]
    },
    "778": {
      "op": "!",
      "defined_out": [
        "poa_id#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%3#0"
      ]
    },
    "779": {
      "op": "assert // We got you covered for free!",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "780": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "782": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "poa_id#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%4#0"
      ]
    },
    "784": {
      "op": "!",
      "defined_out": [
        "poa_id#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%5#0"
      ]
    },
    "785": {
      "op": "assert",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "786": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "788": {
      "op": "gtxns Sender",
      "defined_out": [
        "poa_id#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%6#0"
      ]
    },
    "790": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%6#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "792": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%6#0",
        "awst_tmp%0#0"
      ]
    },
    "794": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%6#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "795": {
      "op": "cover 2",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%6#0",
        "awst_tmp%0#0"
      ]
    },
    "797": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%7#0"
      ]
    },
    "798": {
      "op": "bz claim_poa_with_box_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "801": {
      "op": "frame_dig 2"
    },
    "803": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "805": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "806": {
      "op": "bz claim_poa_with_box_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "809": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "awst_tmp%0#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "810": {
      "op": "b claim_poa_with_box_bool_merge@4"
    },
    "813": {
      "block": "claim_poa_with_box_bool_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "814": {
      "block": "claim_poa_with_box_bool_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ],
      "op": "assert // Opt-in transaction sender and receiver must be the same",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "815": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "817": {
      "op": "gtxns AssetCloseTo",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "819": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "821": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "awst_tmp%1#0"
      ]
    },
    "823": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "824": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "awst_tmp%1#0"
      ]
    },
    "826": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "827": {
      "op": "bz claim_poa_with_box_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "830": {
      "op": "frame_dig 0"
    },
    "832": {
      "op": "global ZeroAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "834": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "835": {
      "op": "bz claim_poa_with_box_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "838": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%1#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "839": {
      "op": "b claim_poa_with_box_bool_merge@8"
    },
    "842": {
      "block": "claim_poa_with_box_bool_false@7",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "843": {
      "block": "claim_poa_with_box_bool_merge@8",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ],
      "op": "assert // Opt-in transaction close to must be zero address",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "844": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%14#0"
      ]
    },
    "846": {
      "op": "frame_dig 1",
      "defined_out": [
        "poa_id#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%14#0",
        "poa_id#0"
      ]
    },
    "848": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._send_poa",
      "op": "callsub _send_poa",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "851": {
      "retsub": true,
      "op": "retsub"
    },
    "852": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa_with_box_ref",
      "params": {
        "opt_in_txn#0": "uint64"
      },
      "block": "claim_poa_with_box_ref",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "855": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "856": {
      "op": "txn Sender",
      "defined_out": [
        "box_ref#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "box_ref#0"
      ]
    },
    "858": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "exists#0"
      ]
    },
    "859": {
      "op": "assert // POA not found, attendance validation failed!",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "860": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "862": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "poa_id#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%0#0"
      ]
    },
    "864": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0",
        "poa_id#0"
      ]
    },
    "865": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "866": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "867": {
      "op": "cover 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "869": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "870": {
      "op": "assert // POA ID mismatch",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ]
    },
    "871": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "873": {
      "op": "gtxns Fee",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "875": {
      "op": "!",
      "defined_out": [
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%4#0"
      ]
    },
    "876": {
      "op": "assert // We got you covered for free!",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ]
    },
    "877": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "879": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%5#0"
      ]
    },
    "881": {
      "op": "!",
      "defined_out": [
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%6#0"
      ]
    },
    "882": {
      "op": "assert",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ]
    },
    "883": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "885": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%7#0"
      ]
    },
    "887": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%7#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "889": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%7#0",
        "awst_tmp%0#0"
      ]
    },
    "891": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%7#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "892": {
      "op": "cover 2",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%7#0",
        "awst_tmp%0#0"
      ]
    },
    "894": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "895": {
      "op": "bz claim_poa_with_box_ref_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "898": {
      "op": "frame_dig 2"
    },
    "900": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "902": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "903": {
      "op": "bz claim_poa_with_box_ref_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "906": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "907": {
      "op": "b claim_poa_with_box_ref_bool_merge@4"
    },
    "910": {
      "block": "claim_poa_with_box_ref_bool_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "911": {
      "block": "claim_poa_with_box_ref_bool_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ],
      "op": "assert // Opt-in transaction sender and receiver must be the same",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "912": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "914": {
      "op": "gtxns AssetCloseTo",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "916": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "918": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "awst_tmp%1#0"
      ]
    },
    "920": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "921": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "awst_tmp%1#0"
      ]
    },
    "923": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%12#0"
      ]
    },
    "924": {
      "op": "bz claim_poa_with_box_ref_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "927": {
      "op": "frame_dig 0"
    },
    "929": {
      "op": "global ZeroAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "931": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%14#0"
      ]
    },
    "932": {
      "op": "bz claim_poa_with_box_ref_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "935": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%1#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "936": {
      "op": "b claim_poa_with_box_ref_bool_merge@8"
    },
    "939": {
      "block": "claim_poa_with_box_ref_bool_false@7",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "940": {
      "block": "claim_poa_with_box_ref_bool_merge@8",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ],
      "op": "assert // Opt-in transaction close to must be zero address",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "941": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%15#0"
      ]
    },
    "943": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0",
        "tmp%15#0",
        "tmp%1#0"
      ]
    },
    "945": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._send_poa",
      "op": "callsub _send_poa",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "948": {
      "retsub": true,
      "op": "retsub"
    },
    "949": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.claim_poa_with_box_map",
      "params": {
        "opt_in_txn#0": "uint64"
      },
      "block": "claim_poa_with_box_map",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "952": {
      "op": "intc_0 // 0"
    },
    "953": {
      "op": "bytec_3 // \"box_map\""
    },
    "954": {
      "op": "txn Sender",
      "defined_out": [
        "\"box_map\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "\"box_map\"",
        "tmp%0#0"
      ]
    },
    "956": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ]
    },
    "957": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "958": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "exists#0",
        "maybe_value%0#0"
      ]
    },
    "959": {
      "op": "btoi",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "exists#0",
        "poa_id#0"
      ]
    },
    "960": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "exists#0",
        "poa_id#0",
        "poa_id#0 (copy)"
      ]
    },
    "961": {
      "op": "uncover 2",
      "defined_out": [
        "exists#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0",
        "exists#0"
      ]
    },
    "963": {
      "op": "assert // POA not found, attendance validation failed!",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0"
      ]
    },
    "964": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "966": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "poa_id#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "poa_id#0",
        "tmp%2#0"
      ]
    },
    "968": {
      "op": "==",
      "defined_out": [
        "poa_id#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%3#0"
      ]
    },
    "969": {
      "op": "assert // POA ID mismatch",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "970": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "972": {
      "op": "gtxns Fee",
      "defined_out": [
        "poa_id#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%4#0"
      ]
    },
    "974": {
      "op": "!",
      "defined_out": [
        "poa_id#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%5#0"
      ]
    },
    "975": {
      "op": "assert // We got you covered for free!",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "976": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "978": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "poa_id#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%6#0"
      ]
    },
    "980": {
      "op": "!",
      "defined_out": [
        "poa_id#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%7#0"
      ]
    },
    "981": {
      "op": "assert",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0"
      ]
    },
    "982": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "984": {
      "op": "gtxns Sender",
      "defined_out": [
        "poa_id#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%8#0"
      ]
    },
    "986": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%8#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "988": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%8#0",
        "awst_tmp%0#0"
      ]
    },
    "990": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "tmp%8#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "991": {
      "op": "cover 2",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "awst_tmp%0#0"
      ]
    },
    "993": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "994": {
      "op": "bz claim_poa_with_box_map_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "997": {
      "op": "frame_dig 2"
    },
    "999": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "1001": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "poa_id#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "1002": {
      "op": "bz claim_poa_with_box_map_bool_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "1005": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "awst_tmp%0#0",
        "poa_id#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "1006": {
      "op": "b claim_poa_with_box_map_bool_merge@4"
    },
    "1009": {
      "block": "claim_poa_with_box_map_bool_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "1010": {
      "block": "claim_poa_with_box_map_bool_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ],
      "op": "assert // Opt-in transaction sender and receiver must be the same",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "1011": {
      "op": "frame_dig -1",
      "defined_out": [
        "opt_in_txn#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "1013": {
      "op": "gtxns AssetCloseTo",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%12#0"
      ]
    },
    "1015": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "opt_in_txn#0 (copy)"
      ]
    },
    "1017": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%1#0"
      ]
    },
    "1019": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "1020": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%1#0"
      ]
    },
    "1022": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "1023": {
      "op": "bz claim_poa_with_box_map_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "1026": {
      "op": "frame_dig 0"
    },
    "1028": {
      "op": "global ZeroAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "1030": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%15#0"
      ]
    },
    "1031": {
      "op": "bz claim_poa_with_box_map_bool_false@7",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "1034": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%1#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "1035": {
      "op": "b claim_poa_with_box_map_bool_merge@8"
    },
    "1038": {
      "block": "claim_poa_with_box_map_bool_false@7",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ]
    },
    "1039": {
      "block": "claim_poa_with_box_map_bool_merge@8",
      "stack_in": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "and_result%1#0"
      ],
      "op": "assert // Opt-in transaction close to must be zero address",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "1040": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%16#0"
      ]
    },
    "1042": {
      "op": "frame_dig 1",
      "defined_out": [
        "poa_id#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0",
        "tmp%16#0",
        "poa_id#0"
      ]
    },
    "1044": {
      "callsub": "smart_contracts.poa.contract.ProofOfAttendance._send_poa",
      "op": "callsub _send_poa",
      "stack_out": [
        "awst_tmp%1#0",
        "poa_id#0",
        "awst_tmp%0#0"
      ]
    },
    "1047": {
      "retsub": true,
      "op": "retsub"
    },
    "1048": {
      "subroutine": "smart_contracts.poa.contract.ProofOfAttendance.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1051": {
      "op": "bytec_1 // \"max_attendees\"",
      "defined_out": [
        "\"max_attendees\""
      ],
      "stack_out": [
        "\"max_attendees\""
      ]
    },
    "1052": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "\"max_attendees\"",
        "30"
      ],
      "stack_out": [
        "\"max_attendees\"",
        "30"
      ]
    },
    "1054": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1055": {
      "op": "bytec 4 // \"asset_url\"",
      "defined_out": [
        "\"asset_url\""
      ],
      "stack_out": [
        "\"asset_url\""
      ]
    },
    "1057": {
      "op": "pushbytes \"ipfs://QmW5vERkgeJJtSY1YQdcWU6gsHCZCyLFtM1oT9uyy2WGm8\"",
      "defined_out": [
        "\"asset_url\"",
        "\"ipfs://QmW5vERkgeJJtSY1YQdcWU6gsHCZCyLFtM1oT9uyy2WGm8\""
      ],
      "stack_out": [
        "\"asset_url\"",
        "\"ipfs://QmW5vERkgeJJtSY1YQdcWU6gsHCZCyLFtM1oT9uyy2WGm8\""
      ]
    },
    "1112": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1113": {
      "op": "bytec_0 // \"total_attendees\"",
      "defined_out": [
        "\"total_attendees\""
      ],
      "stack_out": [
        "\"total_attendees\""
      ]
    },
    "1114": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"total_attendees\"",
        "0"
      ],
      "stack_out": [
        "\"total_attendees\"",
        "0"
      ]
    },
    "1115": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1116": {
      "retsub": true,
      "op": "retsub"
    },
    "1117": {
      "subroutine": "_puya_lib.util.ensure_budget",
      "params": {
        "required_budget#0": "uint64",
        "fee_source#0": "uint64"
      },
      "block": "ensure_budget",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1120": {
      "op": "frame_dig -2",
      "defined_out": [
        "required_budget#0 (copy)"
      ],
      "stack_out": [
        "required_budget#0 (copy)"
      ]
    },
    "1122": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "required_budget#0 (copy)"
      ],
      "stack_out": [
        "required_budget#0 (copy)",
        "10"
      ]
    },
    "1124": {
      "op": "+",
      "defined_out": [
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1125": {
      "block": "ensure_budget_while_top@1",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "frame_dig 0"
    },
    "1127": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "required_budget_with_buffer#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "required_budget_with_buffer#0",
        "tmp%0#0"
      ]
    },
    "1129": {
      "op": ">",
      "defined_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0"
      ]
    },
    "1130": {
      "op": "bz ensure_budget_after_while@7",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1133": {
      "op": "itxn_begin"
    },
    "1134": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "appl"
      ]
    },
    "1136": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1138": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "DeleteApplication"
      ]
    },
    "1140": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1142": {
      "op": "bytec 5 // 0x068101",
      "defined_out": [
        "0x068101",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0x068101"
      ]
    },
    "1144": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1146": {
      "op": "bytec 5 // 0x068101",
      "stack_out": [
        "required_budget_with_buffer#0",
        "0x068101"
      ]
    },
    "1148": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1150": {
      "op": "frame_dig -1",
      "defined_out": [
        "fee_source#0 (copy)",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "fee_source#0 (copy)"
      ]
    },
    "1152": {
      "op": "switch ensure_budget_switch_case_0@3 ensure_budget_switch_case_1@4",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1158": {
      "op": "b ensure_budget_switch_case_next@6"
    },
    "1161": {
      "block": "ensure_budget_switch_case_0@3",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0"
      ]
    },
    "1162": {
      "op": "itxn_field Fee",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1164": {
      "op": "b ensure_budget_switch_case_next@6"
    },
    "1167": {
      "block": "ensure_budget_switch_case_1@4",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%2#0"
      ]
    },
    "1169": {
      "op": "itxn_field Fee",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "1171": {
      "block": "ensure_budget_switch_case_next@6",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "itxn_submit"
    },
    "1172": {
      "op": "b ensure_budget_while_top@1"
    },
    "1175": {
      "block": "ensure_budget_after_while@7",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "retsub": true,
      "op": "retsub"
    }
  }
}
