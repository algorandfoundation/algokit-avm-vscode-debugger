{
  "name": "algokit-avm-vscode-debugger",
  "displayName": "AlgoKit AVM Debugger",
  "version": "0.1.0",
  "private": false,
  "description": "An extension for debugging AVM transactions and smart contract programs.",
  "author": "Algorand Foundation",
  "publisher": "Algorand Foundation",
  "license": "MIT",
  "keywords": [
    "algokit",
    "algorand",
    "avm",
    "algorand debugger",
    "avm debugger",
    "algokit avm debugger",
    "smart contract debugger"
  ],
  "engines": {
    "vscode": "^1.80.0"
  },
  "icon": "./images/icon.png",
  "categories": [
    "Debuggers"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/algorandfoundation/algokit-avm-vscode-debugger.git"
  },
  "bugs": {
    "url": "https://github.com/algorandfoundation/algokit-avm-vscode-debugger/issues"
  },
  "scripts": {
    "build": "run-s build:*",
    "build:clean": "rimraf dist",
    "build:check-types": "tsc --noEmit",
    "build:build": "esbuild ./src/extension.ts --bundle --tsconfig=./tsconfig.json --external:vscode --format=cjs --platform=node --outfile=dist/extension.js",
    "watch": "npm run build:build -- --sourcemap --sources-content=false --watch",
    "format": "prettier --write .",
    "lint": "eslint \"src/**/*.ts\"",
    "lint:fix": "eslint \"src/**/*.ts\" --fix",
    "test": "echo 'No tests yet'",
    "audit": "npm audit",
    "pre-commit": "run-s build lint:fix audit format test",
    "package": "vsce package",
    "postinstall": "patch-package"
  },
  "dependencies": {
    "algosdk": "^2.7.0",
    "avm-debug-adapter": "^0.1.0",
    "lodash": "^4.17.21"
  },
  "devDependencies": {
    "@makerx/eslint-config": "3.1.0",
    "@makerx/prettier-config": "2.0.0",
    "@makerx/ts-config": "^1.0.1",
    "@types/json-bigint": "^1.0.4",
    "@types/lodash": "^4.14.202",
    "@types/node": "^18.18.11",
    "@types/vscode": "^1.66.0",
    "@vscode/vsce": "^2.22.0",
    "esbuild": "^0.19.7",
    "eslint": "8.22.0",
    "npm-run-all": "^4.1.5",
    "patch-package": "^8.0.0",
    "prettier": "3.1.0",
    "rimraf": "^5.0.5",
    "typescript": "^5.3.0"
  },
  "main": "./dist/extension.js",
  "activationEvents": [
    "workspaceContains:**/*.trace.avm.json",
    "onDebug",
    "onDebugResolve:avm",
    "onDebugDynamicConfigurations:avm",
    "onCommand:extension.avmDebugger.getSimulateTraceFile",
    "onCommand:extension.avmDebugger.getProgramSourcesDescriptionFile"
  ],
  "workspaceTrust": {
    "request": "never"
  },
  "contributes": {
    "languages": [
      {
        "id": "teal",
        "extensions": [
          ".teal"
        ],
        "configuration": "teal-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "teal",
        "scopeName": "source.teal",
        "path": "syntaxes/teal.tmLanguage.json"
      }
    ],
    "breakpoints": [
      {
        "language": "teal"
      }
    ],
    "debuggers": [
      {
        "type": "avm",
        "languages": [
          "teal"
        ],
        "label": "AVM Debug",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "simulateTraceFile"
            ],
            "properties": {
              "simulateTraceFile": {
                "type": "string",
                "description": "Transaction group simulation response with execution trace.",
                "default": "${workspaceFolder}/${command:PickSimulateTraceFile}"
              },
              "programSourcesDescriptionFile": {
                "type": "string",
                "description": "Description file for sources of programs appearing in transaction group."
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "avm",
            "request": "launch",
            "name": "Debug AVM Transactions",
            "simulateTraceFile": "${workspaceFolder}/${command:PickSimulateTraceFile}",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "AVM Debug",
            "description": "A new configuration for replaying and debugging Algorand transactions.",
            "body": {
              "type": "avm",
              "request": "launch",
              "name": "Debug AVM Transactions",
              "simulateTraceFile": "^\"\\${workspaceFolder}/\\${command:PickSimulateTraceFile}\"",
              "stopOnEntry": true
            }
          }
        ],
        "variables": {
          "PickSimulateTraceFile": "extension.avmDebugger.getSimulateTraceFile",
          "PickProgramSourcesDescriptionFile": "extension.avmDebugger.getProgramSourcesDescriptionFile"
        }
      }
    ],
    "menus": {
      "editor/title/run": [
        {
          "command": "extension.avmDebugger.debugOpenTraceFile",
          "when": "resourceFilename =~ /.trace.avm.json$/",
          "group": "navigation"
        }
      ]
    },
    "commandPalette": [
      {
        "command": "extension.avmDebugger.debugOpenTraceFile",
        "when": "resourceFilename =~ /.trace.avm.json$/"
      }
    ],
    "commands": [
      {
        "command": "extension.avmDebugger.debugOpenTraceFile",
        "title": "Debug AVM Trace File",
        "category": "AlgoKit AVM Debug",
        "enablement": "!inDebugMode",
        "icon": "$(debug-alt)"
      }
    ],
    "configuration": {
      "title": "AlgoKit AVM Debugger",
      "properties": {
        "avmDebugger.debugAdapter.port": {
          "type": [
            "number",
            "null"
          ],
          "default": null,
          "description": "If specified, the extension will connect to a debug adapter server running on the supplied port. By default the debug adapter will be run inline automatically. This setting should only be used in advanced scenarios."
        }
      }
    }
  }
}
